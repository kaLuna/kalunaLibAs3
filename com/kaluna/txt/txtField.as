/*┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╋┃http://kaluna.jp     ::     mio@kaluna.jp┃::::::::::::::::::::::::::::::::::::::::::::::::::::::::::┃テキスト生成クラス┃Ver.SWFloading.0.1┃Made.2009.6.25┃Development.Mio Takahata┃How to use ?┃	//txtField(文字,フォントサイズ,フォントカラー,入力タイプ);┃	var txt:txtField = new txtField("hoge",12,"000000","INPUT");┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╋*/package com.kaluna.txt{	import flash.display.Sprite;	import flash.text.TextField;	import flash.text.TextFormat;    import flash.text.TextFieldType;	import flash.text.TextFieldAutoSize;		public class txtField extends Sprite {		public var tFormat:TextFormat;		public var tField:TextField;			//		//コンストラクタ		public function txtField(fTxt:String = "",fSize:uint = 12,fCol:String = "000000",fType:String = "DYNAMIC",fw:uint = 100,fh:uint = 20):void {	//			tFormat = new TextFormat();			tFormat.font = "ＭＳ Ｐゴシック";			tFormat.size = fSize;			tFormat.color = "0x"+fCol;			tField = createTxtField(fw,fh);			//tField.autoSize = TextFieldAutoSize.LEFT;			switch(fType){				case "DYNAMIC" :					tField.type = TextFieldType.DYNAMIC;					break;				case "INPUT" :					tField.type = TextFieldType.INPUT;					break;			}			tField.text = fTxt;			tField.setTextFormat(tFormat);			addChild(tField);		}		private function createTxtField(w:uint,h:uint):TextField{			var txt:TextField = new TextField();			txt.width = w;			txt.height = h;			txt.background = true;		//背景			txt.border = true;		//枠			return txt;		}		public function set txtBG(flg:Boolean):void{			tField.background = flg;		}		public function set txtBD(flg:Boolean):void{			tField.border = flg;		}		public function set txtSelect(flg:Boolean):void{			tField.selectable = flg;		}		public function set txtInput(str:String):void{			tField.text = str;		}		public function get txtValue():String{			return tField.text;		}		public function set txtStretch(str:String):void{			switch(str){				case "LEFT":					tField.autoSize = TextFieldAutoSize.LEFT;					break;				case "RIGHT":					tField.autoSize = TextFieldAutoSize.RIGHT;					break;				case "CENTER":					tField.autoSize = TextFieldAutoSize.CENTER;					break;				case "NONE":					tField.autoSize = TextFieldAutoSize.NONE;					break;			}		}	}}