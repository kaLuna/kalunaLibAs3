package com.kaluna.signage{	import flash.net.SharedObject;	import flash.net.SharedObjectFlushStatus;		public class useSO {		private var localData:String;		private var so:SharedObject;		private var cookie:Object;		public function useSO(str:String) {			// constructor code			localData = str;		}		public function initSO(_xml:XML):int{			var flg:Boolean;			so = SharedObject.getLocal(localData,"/");			cookie = so.data;			if(cookie.dxml == _xml){				//cookie.cnt++;				trace("SO同じ"+cookie.cnt);			}else{				trace("SO違う");				cookie.cnt = 0;			}			cookie.dxml = _xml.toString();			return cookie.cnt;		}		public function initSOList(_xml:XMLList):int{			var flg:Boolean;			so = SharedObject.getLocal(localData,"/");			cookie = so.data;			if(cookie.dxml == _xml){				//cookie.cnt++;				trace("SO同じ"+cookie.cnt);			}else{				trace("SO違う");				cookie.cnt = 0;			}			cookie.dxml = _xml.toString();			return cookie.cnt;		}		//XML抽出		public function get getXMLList():XMLList{			return cookie.dxml;		}		//書き込み		public function set writeSO(num:int):void{			cookie.cnt = num;		}		//保存		public function saveSO():void{			try {							var str = so.flush();							switch (str) {				case SharedObjectFlushStatus.FLUSHED :					  trace ("正常にハードディスクに書き込めました。");					  break;				case SharedObjectFlushStatus.PENDING :					  trace ("ユーザーにハードディスク書き込み要求を出します。");					  break;				}			} catch (e) {				trace ("書き込みに失敗しました。");			}		}	}	}